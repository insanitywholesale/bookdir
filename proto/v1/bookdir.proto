syntax = "proto3";

package bookdir.v1;
option go_package = "gitlab.com/insanitywholesale/bookdir/proto/v1";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "BookDir";
        version: "0.0.1";
        contact: {
            name: "inherently";
            url: "https://distro.watch";
            email: "pepitsizous@zoho.com";
        };
        license: {
            name: "AGPLv3";
            url: "https://git.distro.watch/inherently/bookdir/src/branch/master/LICENSE";
        };
    };

    schemes: HTTP;
    schemes: HTTPS;
    consumes: "application/json";
    produces: "application/json";
};

service BookDir {
	rpc GetAllAuthors(Empty) returns (AuthorList) {
		option (google.api.http) = {
			get: "/api/v1/authors"
		};
	};
	rpc GetBooksByAuthor(Author) returns (BookList) {
		option (google.api.http) = {
			get: "/api/v1/book/{AuthorID}"
		};
	};
	rpc GetAllBooks(Empty) returns (BookList) {
		option (google.api.http) = {
			get: "/api/v1/books"
		};
	};
	rpc GetBookByISBN(ISBN) returns (Book) {
		option (google.api.http) = {
			get: "/api/v1/book/{ISBN}"
		};
	};
	rpc AddBook(Book) returns (Empty) {
		option (google.api.http) = {
			post: "/api/v1/book"
			body: "*"
		};
	};
};

message ISBN {
	string ISBN = 1;
};

message BookList {
	repeated Book books = 1;
};

message Book {
	string ISBN = 1;
	string Title = 2;
	Author Author = 3;
	uint32 Year = 4;
	uint32 Edition = 5;
	Publisher Publisher = 6;
	uint32 Pages = 7;
	string Category = 8;
	bool PDF = 9;
	bool Owned = 10;
};

message AuthorList {
	repeated Author authors = 1;
};

message Author {
	uint32 AuthorID = 1;
	string FirstName = 2;
	string MiddleName = 3;
	string LastName = 4;
	uint32 YearBorn = 5;
	uint32 YearDied = 6;
	uint32 BooksWritten = 7;
};

message Publisher {
	uint32 PublisherID = 1;
	string Name = 2;
	uint32 YearStarted = 3;
	uint32 YearEnded = 4;
	uint32 BooksPublished = 5;
};

message Empty {};
