// Code generated by protoc-gen-go. DO NOT EDIT.
// source: v1/bookdir.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ISBN struct {
	ISBN                 string   `protobuf:"bytes,1,opt,name=ISBN,proto3" json:"ISBN,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ISBN) Reset()         { *m = ISBN{} }
func (m *ISBN) String() string { return proto.CompactTextString(m) }
func (*ISBN) ProtoMessage()    {}
func (*ISBN) Descriptor() ([]byte, []int) {
	return fileDescriptor_bda2f1564d91f855, []int{0}
}

func (m *ISBN) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ISBN.Unmarshal(m, b)
}
func (m *ISBN) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ISBN.Marshal(b, m, deterministic)
}
func (m *ISBN) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ISBN.Merge(m, src)
}
func (m *ISBN) XXX_Size() int {
	return xxx_messageInfo_ISBN.Size(m)
}
func (m *ISBN) XXX_DiscardUnknown() {
	xxx_messageInfo_ISBN.DiscardUnknown(m)
}

var xxx_messageInfo_ISBN proto.InternalMessageInfo

func (m *ISBN) GetISBN() string {
	if m != nil {
		return m.ISBN
	}
	return ""
}

type BookList struct {
	Books                []*Book  `protobuf:"bytes,1,rep,name=books,proto3" json:"books,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BookList) Reset()         { *m = BookList{} }
func (m *BookList) String() string { return proto.CompactTextString(m) }
func (*BookList) ProtoMessage()    {}
func (*BookList) Descriptor() ([]byte, []int) {
	return fileDescriptor_bda2f1564d91f855, []int{1}
}

func (m *BookList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BookList.Unmarshal(m, b)
}
func (m *BookList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BookList.Marshal(b, m, deterministic)
}
func (m *BookList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BookList.Merge(m, src)
}
func (m *BookList) XXX_Size() int {
	return xxx_messageInfo_BookList.Size(m)
}
func (m *BookList) XXX_DiscardUnknown() {
	xxx_messageInfo_BookList.DiscardUnknown(m)
}

var xxx_messageInfo_BookList proto.InternalMessageInfo

func (m *BookList) GetBooks() []*Book {
	if m != nil {
		return m.Books
	}
	return nil
}

type Book struct {
	ISBN                 string     `protobuf:"bytes,1,opt,name=ISBN,proto3" json:"ISBN,omitempty"`
	Title                string     `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Author               *Author    `protobuf:"bytes,3,opt,name=Author,proto3" json:"Author,omitempty"`
	Year                 uint32     `protobuf:"varint,4,opt,name=Year,proto3" json:"Year,omitempty"`
	Edition              uint32     `protobuf:"varint,5,opt,name=Edition,proto3" json:"Edition,omitempty"`
	Publisher            *Publisher `protobuf:"bytes,6,opt,name=Publisher,proto3" json:"Publisher,omitempty"`
	Pages                uint32     `protobuf:"varint,7,opt,name=Pages,proto3" json:"Pages,omitempty"`
	Category             string     `protobuf:"bytes,8,opt,name=Category,proto3" json:"Category,omitempty"`
	PDF                  bool       `protobuf:"varint,9,opt,name=PDF,proto3" json:"PDF,omitempty"`
	Owned                bool       `protobuf:"varint,10,opt,name=Owned,proto3" json:"Owned,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Book) Reset()         { *m = Book{} }
func (m *Book) String() string { return proto.CompactTextString(m) }
func (*Book) ProtoMessage()    {}
func (*Book) Descriptor() ([]byte, []int) {
	return fileDescriptor_bda2f1564d91f855, []int{2}
}

func (m *Book) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Book.Unmarshal(m, b)
}
func (m *Book) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Book.Marshal(b, m, deterministic)
}
func (m *Book) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Book.Merge(m, src)
}
func (m *Book) XXX_Size() int {
	return xxx_messageInfo_Book.Size(m)
}
func (m *Book) XXX_DiscardUnknown() {
	xxx_messageInfo_Book.DiscardUnknown(m)
}

var xxx_messageInfo_Book proto.InternalMessageInfo

func (m *Book) GetISBN() string {
	if m != nil {
		return m.ISBN
	}
	return ""
}

func (m *Book) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Book) GetAuthor() *Author {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *Book) GetYear() uint32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *Book) GetEdition() uint32 {
	if m != nil {
		return m.Edition
	}
	return 0
}

func (m *Book) GetPublisher() *Publisher {
	if m != nil {
		return m.Publisher
	}
	return nil
}

func (m *Book) GetPages() uint32 {
	if m != nil {
		return m.Pages
	}
	return 0
}

func (m *Book) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Book) GetPDF() bool {
	if m != nil {
		return m.PDF
	}
	return false
}

func (m *Book) GetOwned() bool {
	if m != nil {
		return m.Owned
	}
	return false
}

type AuthorList struct {
	Authors              []*Author `protobuf:"bytes,1,rep,name=authors,proto3" json:"authors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AuthorList) Reset()         { *m = AuthorList{} }
func (m *AuthorList) String() string { return proto.CompactTextString(m) }
func (*AuthorList) ProtoMessage()    {}
func (*AuthorList) Descriptor() ([]byte, []int) {
	return fileDescriptor_bda2f1564d91f855, []int{3}
}

func (m *AuthorList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthorList.Unmarshal(m, b)
}
func (m *AuthorList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthorList.Marshal(b, m, deterministic)
}
func (m *AuthorList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorList.Merge(m, src)
}
func (m *AuthorList) XXX_Size() int {
	return xxx_messageInfo_AuthorList.Size(m)
}
func (m *AuthorList) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorList.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorList proto.InternalMessageInfo

func (m *AuthorList) GetAuthors() []*Author {
	if m != nil {
		return m.Authors
	}
	return nil
}

type Author struct {
	AuthorID             uint32   `protobuf:"varint,1,opt,name=AuthorID,proto3" json:"AuthorID,omitempty"`
	FirstName            string   `protobuf:"bytes,2,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	MiddleName           string   `protobuf:"bytes,3,opt,name=MiddleName,proto3" json:"MiddleName,omitempty"`
	LastName             string   `protobuf:"bytes,4,opt,name=LastName,proto3" json:"LastName,omitempty"`
	YearBorn             uint32   `protobuf:"varint,5,opt,name=YearBorn,proto3" json:"YearBorn,omitempty"`
	YearDied             uint32   `protobuf:"varint,6,opt,name=YearDied,proto3" json:"YearDied,omitempty"`
	BooksWritten         uint32   `protobuf:"varint,7,opt,name=BooksWritten,proto3" json:"BooksWritten,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Author) Reset()         { *m = Author{} }
func (m *Author) String() string { return proto.CompactTextString(m) }
func (*Author) ProtoMessage()    {}
func (*Author) Descriptor() ([]byte, []int) {
	return fileDescriptor_bda2f1564d91f855, []int{4}
}

func (m *Author) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Author.Unmarshal(m, b)
}
func (m *Author) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Author.Marshal(b, m, deterministic)
}
func (m *Author) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Author.Merge(m, src)
}
func (m *Author) XXX_Size() int {
	return xxx_messageInfo_Author.Size(m)
}
func (m *Author) XXX_DiscardUnknown() {
	xxx_messageInfo_Author.DiscardUnknown(m)
}

var xxx_messageInfo_Author proto.InternalMessageInfo

func (m *Author) GetAuthorID() uint32 {
	if m != nil {
		return m.AuthorID
	}
	return 0
}

func (m *Author) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Author) GetMiddleName() string {
	if m != nil {
		return m.MiddleName
	}
	return ""
}

func (m *Author) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Author) GetYearBorn() uint32 {
	if m != nil {
		return m.YearBorn
	}
	return 0
}

func (m *Author) GetYearDied() uint32 {
	if m != nil {
		return m.YearDied
	}
	return 0
}

func (m *Author) GetBooksWritten() uint32 {
	if m != nil {
		return m.BooksWritten
	}
	return 0
}

type PublisherList struct {
	Publishers           []*Publisher `protobuf:"bytes,1,rep,name=publishers,proto3" json:"publishers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PublisherList) Reset()         { *m = PublisherList{} }
func (m *PublisherList) String() string { return proto.CompactTextString(m) }
func (*PublisherList) ProtoMessage()    {}
func (*PublisherList) Descriptor() ([]byte, []int) {
	return fileDescriptor_bda2f1564d91f855, []int{5}
}

func (m *PublisherList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublisherList.Unmarshal(m, b)
}
func (m *PublisherList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublisherList.Marshal(b, m, deterministic)
}
func (m *PublisherList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublisherList.Merge(m, src)
}
func (m *PublisherList) XXX_Size() int {
	return xxx_messageInfo_PublisherList.Size(m)
}
func (m *PublisherList) XXX_DiscardUnknown() {
	xxx_messageInfo_PublisherList.DiscardUnknown(m)
}

var xxx_messageInfo_PublisherList proto.InternalMessageInfo

func (m *PublisherList) GetPublishers() []*Publisher {
	if m != nil {
		return m.Publishers
	}
	return nil
}

type Publisher struct {
	PublisherID          uint32   `protobuf:"varint,1,opt,name=PublisherID,proto3" json:"PublisherID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	YearStarted          uint32   `protobuf:"varint,3,opt,name=YearStarted,proto3" json:"YearStarted,omitempty"`
	YearEnded            uint32   `protobuf:"varint,4,opt,name=YearEnded,proto3" json:"YearEnded,omitempty"`
	BooksPublished       uint32   `protobuf:"varint,5,opt,name=BooksPublished,proto3" json:"BooksPublished,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Publisher) Reset()         { *m = Publisher{} }
func (m *Publisher) String() string { return proto.CompactTextString(m) }
func (*Publisher) ProtoMessage()    {}
func (*Publisher) Descriptor() ([]byte, []int) {
	return fileDescriptor_bda2f1564d91f855, []int{6}
}

func (m *Publisher) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Publisher.Unmarshal(m, b)
}
func (m *Publisher) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Publisher.Marshal(b, m, deterministic)
}
func (m *Publisher) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Publisher.Merge(m, src)
}
func (m *Publisher) XXX_Size() int {
	return xxx_messageInfo_Publisher.Size(m)
}
func (m *Publisher) XXX_DiscardUnknown() {
	xxx_messageInfo_Publisher.DiscardUnknown(m)
}

var xxx_messageInfo_Publisher proto.InternalMessageInfo

func (m *Publisher) GetPublisherID() uint32 {
	if m != nil {
		return m.PublisherID
	}
	return 0
}

func (m *Publisher) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Publisher) GetYearStarted() uint32 {
	if m != nil {
		return m.YearStarted
	}
	return 0
}

func (m *Publisher) GetYearEnded() uint32 {
	if m != nil {
		return m.YearEnded
	}
	return 0
}

func (m *Publisher) GetBooksPublished() uint32 {
	if m != nil {
		return m.BooksPublished
	}
	return 0
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_bda2f1564d91f855, []int{7}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ISBN)(nil), "bookdir.v1.ISBN")
	proto.RegisterType((*BookList)(nil), "bookdir.v1.BookList")
	proto.RegisterType((*Book)(nil), "bookdir.v1.Book")
	proto.RegisterType((*AuthorList)(nil), "bookdir.v1.AuthorList")
	proto.RegisterType((*Author)(nil), "bookdir.v1.Author")
	proto.RegisterType((*PublisherList)(nil), "bookdir.v1.PublisherList")
	proto.RegisterType((*Publisher)(nil), "bookdir.v1.Publisher")
	proto.RegisterType((*Empty)(nil), "bookdir.v1.Empty")
}

func init() { proto.RegisterFile("v1/bookdir.proto", fileDescriptor_bda2f1564d91f855) }

var fileDescriptor_bda2f1564d91f855 = []byte{
	// 900 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x95, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0xc7, 0xe5, 0xb4, 0x69, 0xda, 0xe9, 0x86, 0xcd, 0x9e, 0x4d, 0xc1, 0xeb, 0x5d, 0x41, 0xd6,
	0x17, 0x4b, 0x54, 0xd1, 0xcc, 0x26, 0x15, 0x12, 0xea, 0x15, 0xc9, 0x36, 0xad, 0x2a, 0x75, 0xbb,
	0x51, 0x8a, 0x84, 0x58, 0x71, 0x33, 0x89, 0x47, 0xc9, 0x50, 0xc7, 0x63, 0x79, 0xa6, 0xa9, 0xb2,
	0x55, 0x6f, 0x78, 0x04, 0xb8, 0x42, 0x3c, 0x01, 0x2f, 0xc2, 0x0b, 0x20, 0x71, 0xc1, 0x35, 0x2f,
	0xc1, 0x1d, 0x9a, 0xe3, 0x8c, 0xe3, 0x36, 0x46, 0xe2, 0xca, 0x73, 0x3e, 0xe6, 0x7f, 0xce, 0xf9,
	0x79, 0x3c, 0x26, 0xb5, 0x79, 0x9b, 0x8e, 0xa4, 0xbc, 0x0a, 0x44, 0xd2, 0x8a, 0x13, 0xa9, 0x25,
	0x10, 0x6b, 0xce, 0xdb, 0xde, 0x8b, 0x89, 0x94, 0x93, 0x90, 0x53, 0x16, 0x0b, 0xca, 0xa2, 0x48,
	0x6a, 0xa6, 0x85, 0x8c, 0x54, 0x9a, 0xe9, 0xa5, 0x8f, 0xf1, 0xc1, 0x84, 0x47, 0x07, 0x32, 0xe6,
	0x11, 0x8b, 0xc5, 0xbc, 0x43, 0x65, 0x8c, 0x39, 0xeb, 0xf9, 0xbe, 0x47, 0x36, 0xcf, 0x2e, 0x7b,
	0x17, 0x00, 0xe9, 0xd3, 0x75, 0x1a, 0x4e, 0x73, 0x67, 0x88, 0x6b, 0xbf, 0x43, 0xb6, 0x7b, 0x52,
	0x5e, 0x9d, 0x0b, 0xa5, 0xe1, 0x15, 0x29, 0x9b, 0x1e, 0x94, 0xeb, 0x34, 0x36, 0x9a, 0xbb, 0x9d,
	0x5a, 0x6b, 0xd5, 0x51, 0xcb, 0x24, 0x0d, 0xd3, 0xb0, 0xff, 0x4b, 0x89, 0x6c, 0x1a, 0xbb, 0x48,
	0x10, 0xea, 0xa4, 0xfc, 0x8d, 0xd0, 0x21, 0x77, 0x4b, 0xe8, 0x4c, 0x0d, 0xd8, 0x27, 0x5b, 0xdd,
	0x6b, 0x3d, 0x95, 0x89, 0xbb, 0xd1, 0x70, 0x9a, 0xbb, 0x1d, 0xc8, 0x6b, 0xa7, 0x91, 0xe1, 0x32,
	0xc3, 0xa8, 0x7e, 0xc7, 0x59, 0xe2, 0x6e, 0x36, 0x9c, 0x66, 0x75, 0x88, 0x6b, 0x70, 0x49, 0xa5,
	0x1f, 0x08, 0x33, 0x94, 0x5b, 0x46, 0xb7, 0x35, 0xe1, 0x90, 0xec, 0x0c, 0xae, 0x47, 0xa1, 0x50,
	0x53, 0x9e, 0xb8, 0x5b, 0x28, 0xbe, 0x97, 0x17, 0xcf, 0x82, 0xc3, 0x55, 0x9e, 0x69, 0x72, 0xc0,
	0x26, 0x5c, 0xb9, 0x15, 0x14, 0x4b, 0x0d, 0xf0, 0xc8, 0xf6, 0x1b, 0xa6, 0xf9, 0x44, 0x26, 0x0b,
	0x77, 0x1b, 0xbb, 0xcf, 0x6c, 0xa8, 0x91, 0x8d, 0xc1, 0xf1, 0x89, 0xbb, 0xd3, 0x70, 0x9a, 0xdb,
	0x43, 0xb3, 0x34, 0x1a, 0xef, 0x6e, 0x22, 0x1e, 0xb8, 0x04, 0x7d, 0xa9, 0xe1, 0x1f, 0x11, 0x92,
	0x8e, 0x81, 0x44, 0xbf, 0x20, 0x15, 0x86, 0x96, 0x65, 0x5a, 0x34, 0xb7, 0x4d, 0xf1, 0xff, 0x72,
	0x2c, 0x25, 0xd3, 0x4a, 0xba, 0x3a, 0x3b, 0x46, 0xba, 0xd5, 0x61, 0x66, 0xc3, 0x0b, 0xb2, 0x73,
	0x22, 0x12, 0xa5, 0x2f, 0xd8, 0xcc, 0x52, 0x5e, 0x39, 0xe0, 0x53, 0x42, 0xde, 0x8a, 0x20, 0x08,
	0x39, 0x86, 0x37, 0x30, 0x9c, 0xf3, 0x18, 0xe5, 0x73, 0xb6, 0xdc, 0xbc, 0x99, 0x0e, 0x69, 0x6d,
	0x13, 0x33, 0xb4, 0x7b, 0x32, 0xb1, 0x98, 0x33, 0xdb, 0xc6, 0x8e, 0x05, 0x0f, 0x10, 0xf3, 0x32,
	0x66, 0x6c, 0xf0, 0xc9, 0x23, 0x73, 0x1e, 0xd4, 0xb7, 0x89, 0xd0, 0x9a, 0x47, 0x4b, 0xaa, 0xf7,
	0x7c, 0xfe, 0x09, 0xa9, 0x66, 0xfc, 0x91, 0xcd, 0x97, 0x84, 0xc4, 0xd6, 0x61, 0xf1, 0xfc, 0xc7,
	0x9b, 0xcb, 0x25, 0xfa, 0xbf, 0x39, 0xb9, 0x17, 0x0e, 0x0d, 0xb2, 0x9b, 0x19, 0x19, 0xaa, 0xbc,
	0xcb, 0x9c, 0xa6, 0x1c, 0x28, 0x5c, 0x9b, 0x5d, 0xa6, 0xf7, 0x4b, 0xcd, 0x12, 0xcd, 0x03, 0x84,
	0x54, 0x1d, 0xe6, 0x5d, 0x86, 0xb1, 0x31, 0xfb, 0x51, 0xc0, 0x83, 0xe5, 0x41, 0x5c, 0x39, 0xe0,
	0x15, 0xf9, 0x08, 0x67, 0xb3, 0x75, 0x82, 0x25, 0xad, 0x07, 0x5e, 0xbf, 0x42, 0xca, 0xfd, 0x59,
	0xac, 0x17, 0x9d, 0x3f, 0xcb, 0xa4, 0x62, 0x62, 0xc7, 0x22, 0x81, 0xef, 0x49, 0xed, 0x94, 0xeb,
	0x6e, 0x18, 0x66, 0x5d, 0x2a, 0x78, 0x92, 0x9f, 0x1b, 0xb7, 0x78, 0xcf, 0x0a, 0x51, 0x18, 0x72,
	0xbe, 0xf7, 0xe3, 0x1f, 0x7f, 0xff, 0x5c, 0xaa, 0x03, 0xe0, 0xfd, 0x30, 0x6f, 0xd3, 0x15, 0x1e,
	0xb8, 0x22, 0x4f, 0x4f, 0xb9, 0xc6, 0x3e, 0x7a, 0x8b, 0x15, 0xa7, 0x62, 0xb0, 0x5e, 0xfd, 0xe1,
	0x27, 0x8e, 0xfa, 0x9f, 0xa3, 0xfe, 0x4b, 0xf8, 0x6c, 0x4d, 0x9f, 0xde, 0xe6, 0xd0, 0xde, 0xc1,
	0x25, 0xa9, 0xa6, 0xa3, 0xa4, 0x67, 0xb3, 0x70, 0x8e, 0x8f, 0xd7, 0x4f, 0x3c, 0x16, 0xf9, 0x04,
	0x8b, 0x3c, 0x81, 0xc7, 0xb6, 0xc8, 0xf2, 0x2b, 0x80, 0xf7, 0xa9, 0x28, 0x5a, 0xbd, 0xc5, 0x59,
	0x00, 0x05, 0xdf, 0x8c, 0x57, 0xe0, 0xf3, 0x5f, 0xa2, 0xe2, 0x73, 0x78, 0x76, 0x5f, 0x91, 0xde,
	0xda, 0x2f, 0xe7, 0x0e, 0x38, 0xb2, 0x5f, 0xd2, 0xb1, 0xd7, 0x4d, 0x81, 0xfc, 0xff, 0xe4, 0xb2,
	0x56, 0x00, 0xaf, 0x74, 0x05, 0x6f, 0xc9, 0x6e, 0xca, 0x05, 0x2b, 0x15, 0x51, 0x29, 0x2e, 0xb0,
	0x87, 0x05, 0x1e, 0x43, 0xd5, 0x16, 0x48, 0xe5, 0x06, 0x48, 0xc4, 0x64, 0xf5, 0x16, 0x78, 0xc7,
	0xde, 0xbb, 0x99, 0x8d, 0xc7, 0x5b, 0xbb, 0xab, 0xfd, 0xe7, 0xa8, 0xb5, 0x07, 0x4f, 0xf3, 0x5a,
	0xf4, 0xd6, 0x64, 0xdf, 0xc1, 0x29, 0xa9, 0x74, 0x83, 0x00, 0xef, 0xf0, 0xb5, 0x9d, 0xde, 0x7a,
	0xbb, 0xf6, 0x65, 0xf9, 0x8f, 0xf2, 0x62, 0x47, 0xce, 0x7e, 0xef, 0x1f, 0xe7, 0xa7, 0xee, 0xef,
	0x0e, 0xfc, 0xea, 0x64, 0xe7, 0xdb, 0xff, 0x8a, 0x10, 0x11, 0x4d, 0x79, 0xc2, 0x23, 0x1d, 0x2e,
	0xa0, 0x3e, 0xd5, 0x3a, 0x56, 0x47, 0x94, 0x06, 0x42, 0xe9, 0x44, 0xb6, 0x6e, 0x98, 0x1e, 0x4f,
	0xbd, 0x7a, 0xcc, 0x63, 0xa1, 0x95, 0xf8, 0x20, 0xaf, 0xd5, 0xd7, 0x1f, 0xe4, 0x54, 0xb6, 0xc6,
	0x72, 0xb6, 0xff, 0x8e, 0x6c, 0x75, 0x4f, 0x07, 0xe7, 0xf3, 0x43, 0xe8, 0xdb, 0x5d, 0x13, 0xa1,
	0x5b, 0xf9, 0x9d, 0x74, 0x25, 0x6d, 0x7f, 0x9f, 0x54, 0x25, 0x63, 0x3a, 0x4a, 0x58, 0x34, 0x9e,
	0xd2, 0x19, 0x53, 0x9a, 0x27, 0xf4, 0xfc, 0xec, 0x4d, 0xff, 0xe2, 0xb2, 0xdf, 0x29, 0xbf, 0x6e,
	0xbd, 0x6e, 0xb5, 0xf7, 0x4b, 0x4e, 0xa9, 0x53, 0x63, 0x71, 0x1c, 0x8a, 0x31, 0xfe, 0x17, 0xe9,
	0x0f, 0x4a, 0x46, 0x47, 0x6b, 0x9e, 0xf7, 0x07, 0x13, 0xa1, 0x43, 0x36, 0x32, 0xbd, 0x50, 0x11,
	0x29, 0x16, 0x09, 0xbd, 0xb8, 0x99, 0xca, 0x90, 0x2b, 0x16, 0xf2, 0xac, 0x1c, 0xfe, 0x53, 0xe9,
	0xbc, 0x3d, 0xda, 0xc2, 0xd5, 0xe1, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc5, 0x96, 0x97, 0xfc,
	0xcb, 0x07, 0x00, 0x00,
}
